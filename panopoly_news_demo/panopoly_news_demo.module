<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * 
 * @return [type] [description]
 */
function panopoly_news_demo_menu(){
  $items['admin/content/remove-demo-content/panopoly-news'] = array(
    'title' => 'Remove Panopoly News demo content',
    'page callback' => 'panopoly_news_demo_disable_demo',
    'page arguments' => array('admin/content'),
    'access arguments' => array('administer features'),
    'type' => MENU_LOCAL_ACTION,
  );
  $items['news/remove-demo-content/panopoly-news'] = array(
    'title' => 'Remove Panopoly News demo content',
    'page callback' => 'panopoly_news_demo_disable_demo',
    'page arguments' => array('news'),
    'access arguments' => array('administer features'),
    'type' => MENU_LOCAL_ACTION,
  );

  return $items;
}

function panopoly_news_demo_disable_demo($redirect_path){
	//Disable the module (and thus the content)
	module_disable(array('panopoly_news_demo'));

	//Clear the menu cache
	menu_rebuild();

	//Set an informative message
	drupal_set_message(t('The Panopoly News demo content has been disabled.'));

	//Reload the admin content page
	drupal_goto($redirect_path);
}

/**
 * This function turns an entity into code that can be used in a
 * hook_defaultcontents
 */
function panopoly_news_demo_export_demo_content() {
	$users_export = array();
	$terms_export = array();

	//Find all the users with an exportable uuid
	$user_query = new EntityFieldQuery();
	$user_result = $user_query->entityCondition('entity_type', 'user')
	->fieldCondition('field_panopoly_news_demo_uuid', 'value', NULL, 'IS NOT NULL')
	->execute();

	//Find all the taxonomy_terms with an exportable uuid
	$term_query = new EntityFieldQuery();
	$term_result = $term_query->entityCondition('entity_type', 'taxonomy_term')
	->fieldCondition('field_panopoly_news_demo_uuid', 'value', NULL, 'IS NOT NULL')
	->execute();


	//Save all the users as serialized strings within a file
	$user_entities = entity_load('user', array_keys($user_result['user']));
	print_r($user_entities);
	foreach($user_entities as $user_entity){
	 	$exported_user = entity_export('user', $user_entity);
	 	print_r(get_class_methods($user_entity));
		//Save its exported format in the array
		$users_export[] = $exported_user;
	}

	$term_entities = entity_load('taxonomy_term', array_keys($term_result['taxonomy_term']));
	foreach($term_entities as $term_entity){
	 	$exported_term = entity_export('taxonomy_term', $term_entity);

		//Save its exported format in the array
		$terms_export[] = $exported_term;
	}

	$export = array_merge($users_export, $terms_export);

	print_r($export);
}


/**
 * Delete all (node) defaultcontent in $feature_name.
 *
 * @todo: THIS FUNCTION IS UNUSED. Delete before going live.
 * 
 * @return [type] [description]
 */
function panopoly_news_demo_delete_defaultcontent($feature_name){
	if(module_load_include('inc', $feature_name, $feature_name . '.features.content')){
		//Load all the featurized pieces of defaultcontent
		$content_defaults_function = $feature_name . '_content_defaults';
	  $components = $content_defaults_function();
	  usort($components, 'defaultcontent_import_sort');

	  //Delete all the defaultcontent
	  if (!empty($components)) {
	    foreach ($components as $component) {
	      if ($nid = defaultcontent_get_default($component->machine_name)) {
	        $node = node_delete($nid);
	      }
	    }
	  }
	}
}